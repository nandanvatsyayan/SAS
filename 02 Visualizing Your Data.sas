*
H)	CONTROLLING AXES AND REFERENCE LINES

	--->	STATEMENTS LIKE VBAR AND LOESS TELL SAS THE TYPE OF GRAPH TO CREATE. HOWEVER, THE SGPLOT PROCEDURE ALSO HAS SUPPORTING STATEMENTS THAT
			ALLOW YOU TO CONTROL OTHER FEATURES OF YOUR GRAPH SUCH AS AXES AND REFERENCE LINES.

	--->	AXES TO SPECIFY OPTIONS FOR THE HORIZONTAL AXIS, USE A STATEMENT WITH THIS GENERAL FORMS;
										PROC SGPLOT; 
										XAXIS options;

*	--->	FOR THE VERTICAL AXIS, REPLACE THE KEYWORD XAXIS WITH YAXIS OPTION INCLUDES,


					GRID								CREATES A LINE AT EACH TICK MARK ON THE AXIS

					LABEL = 'text-string'				SPECIFIES A TEXT STRING ENCLOSED IN QUOTES TO BE USED AS THE LABEL FOR THE ASIX. 
														YOU CAN LAOS USE AN ORDINARY LABEL STATEMENT, BUT A LABEL SPECIFIED USING AN AXIS
														STATEMENT WILL OVERRIDE ONE FROM ANY OTHER SOURCE. IF THERE IS NO VARIABLE LABEL,
														THEN SAS USES THE VARIABLE NAME.

					TYPE = axis-type 					SPECIFIES THE TYPE OF AXIS. "DISCRETE" IS THE DEFAULT FOR CHARACTER VARIABLE. "LINEAR"
														IS THE DEFAULT FOR NUMERIC VARIABLES. TIME IS THE DEFAULT FOR VARIABLES THAT HAVE DATE
														TIME OR DATETIME FORMATS ASSOCIATED WITH THEM. LOG SPECIFIES A LOGARITHMIC SCALE.

					VALUES = (values-list)				SPECIFIES VALUES FOR TICK MARKS ON AXES. VALUES MUST BE ENCLOSED IN PARENTHESES, AND CAN
														BE SPECIFIES EITHER AS A LIST (0 5 10 15 20) OR A RANGE (0 TO 20 BY 5)

	--->	REFERENCE LINES -- ADDING REFERENCE LINES TO A GRAPH SHOWS WHICH POINTS ARE ABOVE OR BELOW IMPORTANT LEVELS. TO ADD A HORIZONTAL OR
			VERTICAL REFERENCE LINE, USE A "REFLINE" STATEMENT. ;

										PROC SGPLOT; 
										REFLINE values / options; 

*	--->	AXIS = axis				SPECIFIES THE AXIS THAT CONTAINS THE REFERENCE LINE VALUES, 
									EITHER X OR Y. THE DEFAULT IS Y FOR HORIZONTAL LINES.

	--->	LABEL = (label-list)	SPECIFIES ONE OR MORE TEXT STRINGS (EACH ENCLOSED IN QUOTES 
									AND SEPARATED BY SPACES) TO BE USED AS LABEL FOR THE REFERENCE
									LINES.

	--->	TRANSPARENCY = n		SPECIFIES THE DEGREE OF TRANSPARENCY FOR THE REFERENCE LINE. 
									THE VALUE OF N MUST BE BETWEEN 0 (THE DEFAULT) AND 1, WITH 1
									BEING COMPLETELY TRANSPARENT AND 0 BEING COMPLETELY OPAQUE.


	--->	IF THE REFINE STATEMENT COMES BEFORE ANY PLOT STATEMENTS, THEN THE LINE WILL VE DRAWN BEHIND THE PLOT ELEMENTS. IF IT COMES AFTERWARD
			THEN THE LINES WILL BE DRAWN IN FRONT OF THE PLOT ELEMENTS.;


DATA cities; 
   INFILE "D:\Practice\SAS\Little SAS Book\Data\Average High Temperatures.csv" DSD DLM=","; 
   INPUT Month IntFalls Raleigh Yuma @@; 
RUN; 
* Plot average high and low temperatures by city; 
PROC SGPLOT DATA = cities; 
   SERIES X = Month Y = IntFalls; 
   SERIES X = Month Y = Raleigh; 
   SERIES X = Month Y = Yuma; 
   REFLINE 32 75 / LABEL = ('32 degrees' '75 degrees') TRANSPARENCY = 0.5; 
   XAXIS TYPE = DISCRETE; 
   YAXIS LABEL = 'Average High Temperature (F)'; 
   TITLE 'Temperatures for International Falls, Raleigh, and Yuma'; 
RUN; 				*


I)	CONTROLLING LEGENDS AND INSETS

	--->	THE SGPLOT PROCEDURES GENERATES LEGENDS AUTOMATICALLY FOR YOUR PLOTS, WHEN APPROPRIATE. THIS IS GREAT BEACSUE THEN YOU DON'T HAVE TO
			THINK ABOUT THEM. BUT SOMETIMES YOU MAY WANT TO REMOVE THE LEGEND, OR MOVE IT TO A DIFFERENT PLACE, OR ADD A NOTE OR COMMENT OF YOUR
			OWN.

	--->	CHANGING LEGENDS. -- YOU CAN CHANGE MANY ASPECTS OF A LEGEND USING THE "KEYLEGEND" STATEMENT WITH THIS GENERAL FORM;
										KEYLEGEND / options;

*	--->	ACROSS = n 						SPECIFIES THE NUMBER OF COLUMNS IN THE LEGEND

			DOWN = n						SPECIFIES THE NUMBERS OF ROW IN THE LEGEND

			LOCATION = value 				SPECIFIES THE LOCATION FOR THE LEGEND, EITHER "INSIDE" THE AXIS AREA OR "OUTSIDE" (THE DEFAULT).

			NOBORDER						REMOVES THE BORDER.

			POSITION = value				SPECIFIES THE POSITION OF THE LEGEND, EITHER "TOP", "TOPLEFT"
											"TOPRIGHT", "BOTTOM", "BOTTOMLEFT", "BOTTOMRIGHT", "LEFT" OR "RIGHT".

	--->	REMOVING LEGENDS -- SOMETIMES YOU DON'T WANT LEGEND. TO REMOVE IT, SIMPLY ADD THE "NOAUTOLEGEND" TO THE "PROC SGPLOT" STATEMENT. ;
 
										PROC SGPLOT DATA = data-set NOAUTOLEGEND;

*	--->	IF YOU HAVE BOTH "KEYLEGEND" STATEMENT AND THE "NOAUTOLEGEND" OPTION, THEN THE OPTION WILL BE IGNORED.

	--->	ADDING INSETS -- TO PLACE TEXT IN THE AXIS AREA USE AN "INSET" STATEMENT WITH THIS GENERAL FORM.;

										INSET 'text-string-1' 'text-string-2' ... 'text-string-n' / options; 

*	--->	BORDER						ADDS A BORDER

			POSITION = value 			SPECIFIES THE POSITION OF THE INSET, EITHER "TOP", "TOPLEFT", 
										"TOPRIGHT", "BOTTOM", "BOTTOMLEFT", "BOTTOMRIGHT", "LEFT" OR "RIGHT";

DATA Olympic1500; 
   INFILE "D:\Practice\SAS\Little SAS Book\Data\Men’s 1500 Meter.csv" DSD DLM=","; 
   INPUT Year OlympicTime WorldRecord @@; 
RUN; 
PROC SGPLOT DATA = Olympic1500; 
   SCATTER X = Year Y = OlympicTime; 
   SERIES X = Year Y = WorldRecord; 
   KEYLEGEND / LOCATION = INSIDE POSITION = TOPRIGHT; 
   INSET 'Olympics not held in' '1940 and 1944' / POSITION = BOTTOMLEFT; 
   YAXIS LABEL = 'Time in Seconds'; 
   TITLE "Times for Men's 1500 Meter Run"; 
RUN;			*


J)	CUSTOMIZING GRAPH ATTRIBUTES

	--->	WHEN YOU CREATE GRAPHS, YOU WANT THEM TO BE ATTRACTIVE AND EASY TO READ. THAT'S WHY SAS HAS STYLE TEMPLATES THAT HAVE BEEN DESIGNED
			PSECIFICALLY FOR THE USE WITH GRAPHS. STILL THERE MAYBE TIMES WHEN YOU WATN STARS INSTEAD OF CIRCLES, OR THICKER LINES, OR A DIFFERENT 
			COLOUR. FORTUNATELY, THE "SGPLOT" INCLUDES OPTIONS FOR CONTROLLING GRAPH ATTRIBUTES.

	--->	TO USE THESE OPTIONS, PUT THEM AFTER A SLASH AT THE END OF A BASIC PLOT STATEMENT. FOR EXAMPLE;
								PROC SGPLOT; 
								SCATTER X = Score Y = HoursOfStudy / MARKERATTRS = (SYMBOL = STAR); 

*	--->	THERE ARE MANY OPTIONS FOR CONTROLLING GRAPH ATTRIBUTES. SOME COMMON ONES ARE

					FILLATTRS = (attribute = value)					SPCIFIES THE APPEARANCE OF A FILLED AREA. THE ONLY ATTRIBUTE IS COLOR=

					LABELATTRS = (attribute = value)				SPECIFIES THE APPEARANCE OF AXIS LABELS. ATTRIBUTES INCLUDE "COLOR=" "SIZE="
																	"STYLE=",and "WEIGHT=".

					LINEATTRS = (attribute = value)					SPEICIES THE APPEARANCE OF A LINE. ATTRIBUTES ARE "COLOR=", "PATTERN=", AND
																	"THICKNESS="

					MARKERATTRS = (attribute = value)				SPECIFIES THE APPEARANCE OF A MARKER. ATTRIBUTES ARE "COLOR=", "SIZE=", AND 
																	SYMBOL=.

					VALUEATTRS = (attribute = value)				SPECIFIES THE APPEARANCE OF AXIS TICK LABELS. ATTRIBUTES ARE "COLOR=", "SIZE=", 
																	"STYLE=",and "WEIGHT=".

	--->	EACH ATTRIBUTES HAS MANY POSSIBLE VALUES. HERE ARE FEW

					Attribute							Possible Values
					COLOR= 								RGB NOTATION SUCH AS #FF0000(RED) OR NAMED VALUES SUCH AS "RED", PLUS MANY OTHERS

					PATTERN=							SOLID, DASH, SHORTDASH, LONGDASH, DOT, DASHDASHDOT, or DASHDOTDOT.

					SIZE=								NUMBERS WITH THE UNITS CM, IN, MM, PCT, PT or PX.

					STYLE= 								ITALIC or NORMAL (the default)

					SYMBOL= 							CIRCLE, CIRCLEFILLED, DIAMOND, DIAMONDFILLED, PLUS, SQUARE, SQUAREFILLED, STAR, STARFILLED, 
														TRIANGLE, or TRIANGLEFILLED

					THICKNESS= 							NUMBERS WITH UNITS CM, IN, MM, PCT, PT, or PX (the default) 

					WEIGHT= 							BOLD or NORMAL;


DATA Olympic1500; 
   INFILE "D:\Practice\SAS\Little SAS Book\Data\Men’s 1500 Meter.csv" DSD DLM=","; 
   INPUT Year OlympicTime WorldRecord @@; 
RUN; 
PROC SGPLOT DATA = Olympic1500; 
   SCATTER X = Year Y = OlympicTime /  
      MARKERATTRS = (SYMBOL = CIRCLEFILLED SIZE = 2MM); 
   SERIES X = Year Y = WorldRecord /  
      LINEATTRS = (THICKNESS = 2MM) TRANSPARENCY = .75; 
   XAXIS LABELATTRS = (WEIGHT = BOLD); 
   YAXIS LABEL = 'Time in Seconds' LABELATTRS = (WEIGHT = BOLD); 
   TITLE BOLD "Times for Men's 1500 Meter Run"; 
RUN; 			*


K)	CREATING PANELED GRAPH

	--->	THE SGPANEL PROCEDURE IS A CLOSE COUSIN OF THE SGPLOT PROCEDURE. THE SGPANEL PROCEDURE PRODUCES NEARLY ALL THE SAME TYPES OF 
			GRAPHS AS THE SGPLOT PROCEDURE, BUT WHILE SGPLOT PRODUCES SINGLE-CELLED GRAPHS, SGPANEL CAN PRODUCE MULTI-CELLED GRAPHS. PROC 
			SGPANEL PRODUCES A SEPARATE CELL FOR EACH COMBINATION OF VALUES OF THE CLASSIFCATION VARIABLES THAT YOU SPECIFY. EACH OF THOSE 
			CELLS USES THE SAME VARIABLES ON THEIR X AND Y AXES.

	--->	THE SYNTAX FOR PROC SGPANEL IS ALMOST IDENTICAL TO PROC SGPLOT, SO IT IS EASY TO CONVERT ONE TO THE OTHER BY MAKING JUST A COUPLE 
			CHANGES TO YOUR CODE. YOU SIMPLY REPLACE THE KEYWORD  SGPLOT WITH SGPANEL, AND ADD A PANELBY STATEMENT LIKE THIS;

								PROC SGPANEL; 
									PANELBY variable-list / options; 
									plot-statement; 

*	--->	THE PANELBY STATEMENT MUST APPEAR BEFORE ANY STATEMENTS THAT CREATE PLOTS. POSSIBLE OPTIONS INCLUDE:

				COLUMNS = n						SPECIFIES THE NUMBER OF COLUMNS IN THE PANEL

				MISSING							SPECIFIES THAT OBSERVATIONS WITH MISSING VALUES FOR THE PANELBY VARIABLE SHOULD BE INCLUDED.

				NOVARNAME						REMOVES THE VARIABLE NAME FROM THE CELL HEADING

				ROWS = n						SPECIFIES THE NUMBER OF ROWS IN THE PANEL
 
				SPACING = n						SPECIFIES THE NUMBER OF PIXELS BETWEEN ROWS THE COLUMNS IN THE PANEL. THE DEFAULT IS 0

				UNISCALE = value				SPECIFIES WHICH AXES WILL SHARE THE SAME RANG VALUES. POSSIBLE VALUES ARE "COLUMN", ROW AND
												ALL.

	--->	INSTEAD OF XAXIS AND YAXIS STATEMENTS, THE SGPANEL PROCEDURE USES COLAXIS AND ROWAXIS STATEMENTS TO CONTROL AXES.;


DATA wings; 
INFILE "D:\Practice\SAS\Little SAS Book\Data\Birds Species.csv" DSD DLM=","; 
INPUT Name : $12. Type $ Length Wingspan; 
RUN; 
* Plot Wingspan by Length; 
PROC FORMAT; 
VALUE $birdtype 
'S' = 'Songbirds' 
'R' = 'Raptors'; 
RUN; 
PROC SGPANEL DATA = wings; 
PANELBY Type / NOVARNAME SPACING = 5; 
SCATTER X = Wingspan Y = Length; 
FORMAT Type $birdtype.; 
TITLE 'Comparison of Wingspan vs. Length'; 
RUN;		*

L)	SPECIFYING IMAGE PROPERTIES AND SAVING GRAPHICS OUTPUT

	--->	IF YOU'RE WRITTING A PAPER OR CREATING A PRESENTATION, YOU MAY NEED TO ACCESS INDIVIDUAL GRAPHS. IN THE WINDOWS OPERATING ENVIRONMENT,
			YOU CAN SIMPLY COPY AND PASTE IMAGES WHEN YOU VIEW THEM IN SAS. SOMETIMES THAT MAYBE ALL YOU NEED. HOWVER, AT OTHER TIMES YOU MAY 
			WISH TO SPECIFY THE PROPERTIES OF YOUR GRAPHS OR SAVE THEM IN FILES FOR LATER USE.

	--->	SPECIFYING PROPERTIES OF IMAGES -- TO SPECIFY PROPERTIES FOR YOUR IMAGES, USE THE "ODS GRAPHICS" STATEMENT WITH THIS GENERAL FORM;
								ODS GRAPHICS / options;

*	--->	OPTION INCLUDED

					HEIGHT = n						SPECIFIES THE IMAGE HEIGHT IN CM, IN, MM, PT or PX.

					IMAGENAME = 'filename'			SPECIFIES THE BASE IMAGE FILENAME. THE DEFAULT NAME FOR AN
													IMAGE FILE IS THE NAME OF IT'S "ODS" OUTPUT OBJECT.

					OUTPUTFMT = file-type			SPECIFIES THE GRAPH FORMAT. THE DEFAULT VARIES BY DESTINATION
													POSSIBLE VALUES INCLUDE BMP, GIF, JPEG, PDF, PNG, PS, SVG, 
													TIFF, AND MANY OTHERS.

					RESET							RESETS OPTIONS TO THEIR DEFAULTS.

					WIDTH = n						SPECIFIES THE IMAGE WIDTH IN CM, IN, MM, PT, or PX.

	--->	SAVING GRAPHICAL OUPUT -- FOR SOME DESTINATIONS, GRAPHS AND TABULAR OUTPUT ARE INTEGRATED TOGETHER IN A SINGLE FILE. FOR OTHER 
			DESTINATIONS GRAPHS ARE SAVED SEPARATELY FROM TABLUAR OUTOUT. THE OPTION YOU USE TO SAVE GRAPHS STATEMENT WITH THIS GENERAL FORM;
							ODS destination-name options;


*	--->	WHERE DESTINATION-NAME IS YOUR ODS DESTINATION SUCH AS HTML, LISTING, PDF OR RTF. OPTIONS INCLUDE

					FILE = 'path/filename'			SPECIFIES A PATH AND FILENAME FOR SAVING OUTPUT IMAGES FROM THE "PDF" AND "RTF"
													DESTINATIONS. IMAGES WILL BE SAVED IN A SINGLE FILE ALONG WITH TABULAR OUTPUT.

					GPATH = 'path'					SPECIFIES A PATH FOR SAVING OUTPUT IMAGES FROM THE LISTING AND HTML DESTINATIONS.
													IMAGES WILL BE SAVED IN INDIVIDUAL FILES.

					DPI = n							SPECIFIES THE IMAGE RESOLUTION FOR THE PDF DESTINATION. THE DEFAULT IS 200.

					IMAGE_DPI = n					SPECIFIES IMAGE RESOLUTION FOR THE HTML, LISTING AND RTF DESTINATIONS. THE DEFAULT IS 100.

					STYLE = style-name				SPECIFIES A STYLE TEMPLATE.;



DATA wings; 
INFILE "D:\Practice\SAS\Little SAS Book\Data\Birds Species.csv" DSD DLM=","; 
INPUT Name : $12. Type $ Length Wingspan; 
RUN; 
* Plot Wingspan by Length; 
ODS LISTING GPATH =  
'c:\MyGraphs' STYLE = 
JOURNAL; 
ODS GRAPHICS / RESET  
IMAGENAME = 'BirdGraph'  
OUTPUTFMT = BMP  
HEIGHT = 2IN WIDTH = 3IN; 
PROC SGPLOT DATA = wings; 
SCATTER X =  
Wingspan Y = Length; 
TITLE 'Comparison of ' 
'Wingspan vs. Length'; 
RUN;
