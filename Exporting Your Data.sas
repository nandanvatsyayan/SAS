*
A)	METHODS FOR EXPORTING YOUR DATA

	--->	IN OUR EVER INCREASINGLY COMPLEX WORLD, PEOPLE OFTEN NEED TO TRANSFER DATA FROM ONE APPLICATION TO ANOTHER. FORTUNATELY, SAS GIVES 
			YOU MANY OPTIONS FOR DOING THIS. THE TYPES OF FILES THAT YOU CAN CREATE AND THE METHODS AVAILABLE FOR CREATING THOSE FILES DEPEND ON 
			WHAT OPERATING ENVIRONMENT YOU ARE USING AND WHETHER YOU HAVE SAS/ACCESS SOFTWARE. 

	--->	METHODS FOR EXPORTING DATA TO OTHER APPLICATIONS FALL INTO THESE GENERAL CATEGORIES:

	--->	CREATING DELIMITED OR TEXT FILES THAT THE OTHER SOFTWARE CAN READ

	--->	CREATING FILES IN FORMATS LIKE HTML, RTF, OR XML THAT THE OTHER SOFTWARE CAN READ

	--->	WRITING THE DATA IN THE OTHER SOFTWARE’S NATIVE FORMAT

	--->	CREATING DELIMITED AND TEXT FILES  NO MATTER WHAT YOUR ENVIRONMENT, YOU CAN ALWAYS CREATE DELIMITED OR TEXT FILES AND MOST SOFTWARE 
			HAS THE ABILITY TO READ THESE TYPES OF DATA FILES.

	--->	THE DATA STEP, DISCUSSED IN SECTION 10.5, GIVES YOU THE MOST CONTROL OVER THE FORMAT OF YOUR FILES, BUT REQUIRES THE MOST STEPS. 

	--->	THE EXPORT WIZARD, DISCUSSED IN SECTION 10.2, AND THE EXPORT PROCEDURE, DISCUSSED IN SECTION 10.3, ARE EASY TO USE, BUT YOU HAVE 
			LESS CONTROL OVER THE RESULT AND NOT EVERYONE HAS ACCESS TO THESE TOOLS.

	--->	THE OUTPUT DELIVERY SYSTEM (ODS), DISCUSSED IN SECTION 10.6, CAN CREATE COMMA SEPARATED VALUES (CSV) FILES FROM ANY PROCEDURE OUTPUT 
			AND A SIMPLE PROC PRINT WILL PRODUCE A REASONABLE FILE FOR IMPORTING INTO OTHER PROGRAMS.

	--->	CREATING HTML, RTF, AND XML FILES  USING ODS, DISCUSSED IN SECTION 10.6, YOU CAN CREATE HTML, RTF, AND XML FILES FROM ANY PROCEDURE 
			OUTPUT. MANY APPLICATIONS CAN READ DATA IN THESE TYPES OF FILES. ALTHOUGH WE DO NOT COVER CREATING RTF AND XML FILES FOR THIS PURPOSE, 
			THE GENERAL METHOD IS THE SAME AS CREATING HTML FILES.

	--->	CREATING FILES IN NATIVE FORMATS  THERE ARE SEVERAL METHODS FOR CREATING FILES IN THE NATIVE FORMAT OF OTHER SOFTWARE APPLICATIONS. 
			NOT ALL METHODS ARE AVAILABLE FOR ALL SOFTWARE APPLICATIONS, AND SOME METHODS DEPEND ON WHAT SAS SOFTWARE PRODUCTS YOU HAVE INSTALLED, 
			WHICH OPERATING ENVIRONMENT, AND WHAT VERSION OF SAS YOU ARE USING. WE DO NOT ATTEMPT TO COVER ALL METHODS, SO SEE THE SAS HELP AND 
			DOCUMENTATION FOR COMPLETE INFORMATION.

	--->	FOR PC FILES INCLUDING MICROSOFT EXCEL, MICROSOFT ACCESS, DBASE, PARADOX, SPSS, STATA, AND JMP, YOU CAN CREATE FILES USING THE EXPORT 
			WIZARD DISCUSSED IN SECTION 10.2, OR THE EXPORT PROCEDURE DISCUSSED IN SECTION 10.4 (THE EXAMPLE IS FOR EXCEL). HOWEVER, TO CREATE FILES
			IN MOST OF THESE FORMATS YOU NEED SAS/ACCESS INTERFACE TO PC FILES. SUPPORT FOR JMP FILES IS NOW INCLUDED IN BASE SAS. THIS METHOD IS 
			ONLY AVAILABLE FOR THE WINDOWS OR UNIX OPERATING SYSTEMS. 

	--->	YOU MAY HAVE A PC FILES SERVER APPLICATION RUNNING IN YOUR SAS ENVIRONMENT. THE PC FILES SERVER FACILITATES SHARING OF SOME PC FILES 
			BETWEEN DIFFERENT WINDOWS COMPUTERS, BETWEEN WINDOWS AND UNIX COMPUTERS, OR EVEN ON A SINGLE WINDOWS COMPUTER. THE PC FILES SERVER 
			APPLICATION REQUIRES THAT SAS/ACCESS INTERFACE TO PC FILES BE INSTALLED. YOU CAN USE THE PC FILES SERVER THROUGH EITHER THE EXPORT 
			WIZARD OR THE EXPORT PROCEDURE. 

	--->	IF YOU DON’T HAVE SAS/ACCESS INTERFACE TO PC FILES, AND YOU ARE USING WINDOWS, YOU MAY BE ABLE TO USE DYNAMIC DATA EXCHANGE (DDE) TO 
			MOVE DATA FROM SAS TO SOME PC APPLICATIONS WITHOUT CREATING ANY INTERMEDIATE FILES.  

	--->	FOR DATABASE MANAGEMENT SYSTEMS THAT ARE NOT PC BASED INCLUDING ORACLE, DB2, INGRES, MYSQL, AND SYBASE, THERE ARE  SAS/ACCESS PRODUCTS 
			THAT ALLOW YOU TO CREATE FILES IN THE NATIVE FORMATS OF THESE APPLICATIONS.


B)	WRITTING DELIMITED FILES WITH EXPORT PROCEDURE
	
	--->	THE EXPORT PROCEDURE, LIKE THE EXPORT WIZARD, IS AVAILABLE FOR WINDOWS AND UNIX OPERATING ENVIRONMENTS. SINCE THE EXPORT WIZARD IS AN 
			INTERFACE TO THE EXPORT PROCEDURE, YOU CAN CREATE THE SAME TYPES OF FILES WITH THE EXPORT PROCEDURE THAT YOU CAN WITH THE EXPORT WIZARD.
			THE ADVANTAGE OF USING THE PROCEDURE OVER THE WIZARD IS THAT YOU CAN INCORPORATE THE PROCEDURE CODE INTO EXISTING SAS PROGRAMS, AND YOU 
			DON’T NEED TO STEP THROUGH ALL THE EXPORT WIZARD WINDOWS EVERY TIME YOU WANT TO CREATE A FILE.

	--->	THE EXPORT PROCEDURE  THE GENERAL FORM OF PROC EXPORT IS:

						PROC EXPORT DATA = data-set OUTFILE = 'filename':

	--->	WHERE DATA-SET IS THE SAS DATA SET YOU WANT TO EXPORT, AND FILENAME IS THE NAME YOU MAKE UP FOR THE OUTPUT DATA FILE. THE FOLLOWING 
			STATEMENT TELLS SAS TO READ A TEMPORARY SAS DATA SET NAMED HOTELS AND WRITE A COMMA-DELIMITED FILE NAMED HOTELS.CSV IN A DIRECTORY 
			NAMED MYRAWDATA ON THE C DRIVE (WINDOWS):

						PROC EXPORT DATA = hotels OUTFILE = 'c:\MyRawData\Hotels.csv':

	--->	SAS USES THE LAST PART OF THE FILENAME, CALLED THE FILE EXTENSION, TO DECIDE WHAT TYPE OF FILE TO CREATE. YOU CAN ALSO SPECIFY THE 
			FILE TYPE BY ADDING THE DBMS= OPTION TO THE PROC EXPORT STATEMENT. THE FOLLOWING TABLE SHOWS THE FILENAME EXTENSIONS AND DBMS 
			IDENTIFIERS CURRENTLY AVAILABLE FOR DELIMITED FILES. IF YOU SPECIFY THE DBMS= OPTION, THEN IT TAKES PRECEDENCE OVER THE FILE EXTENSION.

	--->					TYPE OF FILE					EXTENSION				DBMS IDENTIFIER
							COMMA-DELIMITED 				.CSV					CSV
							TAB-DELIMITED 					.TXT					TAB
							SPACE-DELIMITED  										DLM

	--->	NOTICE THAT FOR SPACE-DELIMITED FILES, THERE IS NO STANDARD EXTENSION SO YOU MUST USE THE DBMS= OPTION. THE FOLLOWING STATEMENT, 
			CONTAINING THE DBMS= OPTION, TELLS SAS TO CREATE A SPACE DELIMITED FILE NAMED HOTELS.SPC. THE REPLACE OPTION TELLS SAS TO REPLACE 
			ANY FILE WITH THE SAME NAME.

	--->							PROC EXPORT DATA = hotels OUTFILE = 'c:\MyRawData\Hotels.spc' 
									DBMS = DLM REPLACE:

	--->	IF YOU WANT TO CREATE A FILE WITH A DELIMITER OTHER THAN A COMMA, TAB, OR SPACE, THEN YOU CAN ADD THE DELIMITER STATEMENT. IF YOU USE 
			THE DELIMITER STATEMENT, THEN IT DOES NOT MATTER WHAT FILE EXTENSION YOU USE, OR WHAT DBMS IDENTIFIER YOU SPECIFY, THE FILE WILL HAVE 
			THE DELIMITER THAT YOU SPECIFY IN THE DELIMITER STATEMENT. FOR EXAMPLE, THE FOLLOWING WOULD PRODUCE A FILE, HOTELS.TXT, THAT HAS THE 
			AMPERSAND (&) AS THE DELIMITER: 

	--->							PROC EXPORT DATA = hotels OUTFILE = 'c:\MyRawData\Hotels.txt' 
									DBMS = DLM REPLACE: 
									DELIMITER='&':

C)	WRITING MICROSOFT EXCEL FILES WITH THE EXPORT PROCEDURE 

	--->	IF YOU ARE USING THE WINDOWS OR UNIX OPERATING ENVIRONMENT, AND YOU HAVE SAS/ACCESS INTERFACE TO PC FILES, THEN YOU CAN USE THE EXPORT 
			PROCEDURE TO CREATE MICROSOFT EXCEL FILES.
 
	--->	HERE IS THE GENERAL FORM OF PROC EXPORT FOR WRITING EXCEL FILES: 

									PROC EXPORT DATA = DATA-SET OUTFILE = 'FILENAME' DBMS = IDENTIFIER  
									REPLACE:
 
	--->	WHERE DATA-SET IS THE SAS DATA SET YOU WANT TO EXPORT, AND FILENAME IS THE NAME YOU MAKE UP FOR THE OUTPUT DATA FILE. THE DBMS= OPTION 
			TELLS SAS WHAT TYPE OF EXCEL FILE TO CREATE. THE REPLACE OPTION TELLS SAS TO REPLACE THE FILE IF IT ALREADY EXISTS.

	--->	DBMS IDENTIFIERS  THERE ARE SEVERAL DBMS IDENTIFIERS YOU CAN USE TO CREATE EXCEL FILES. THREE COMMONLY USED IDENTIFIERS ARE EXCEL, 
			XLS, AND XLSX.  THE EXCEL IDENTIFIER IS AVAILABLE ONLY ON WINDOWS. THE XLS IDENTIFIER CREATES OLDER STYLE FILES (.XLS EXTENSION) AND 
			IS AVAILABLE ON WINDOWS AND UNIX. THE XLSX1 IDENTIFIER CREATES NEWER STYLE FILES (.XLSX EXTENSION) AND IS AVAILABLE ON BOTH 
			WINDOWS AND UNIX. NOT ALL OF THESE IDENTIFIERS MAY WORK FOR YOU IF YOUR WINDOWS COMPUTER HAS A MIXTURE OF 64-BIT AND 32-BIT 
			APPLICATIONS. IN ADDITION, SOME COMPUTER CONFIGURATIONS MAY REQUIRE THAT A PC FILES SERVER BE INSTALLED. THE PC FILES SERVER USES THE 
			EXCELCS IDENTIFIER. SEE THE SAS HELP AND DOCUMENTATION FOR MORE INFORMATION. 

	--->	NAMING SHEETS  BY DEFAULT, THE NAME OF THE MICROSOFT EXCEL SHEET WILL BE THE SAME AS THE NAME OF THE SAS DATA SET.  IF YOU WANT THE 
			SHEET TO HAVE A DIFFERENT NAME, THEN SPECIFY IT IN THE SHEET= STATEMENT. SPECIAL CHARACTERS IN SHEET NAMES WILL BE CONVERTED TO 
			UNDERSCORES, AND THE $ IS NOT ALLOWED AT THE END OF THE SHEET NAME. THE FOLLOWING STATEMENT CREATES A SHEET NAMED GOLF_HOTELS: 

									SHEET = 'GOLF HOTELS':
 
	--->	YOU CAN CREATE EXCEL FILES WITH MULTIPLE SHEETS BY SUBMITTING MULTIPLE EXPORT PROCEDURES, SPECIFING THE SAME FILE NAME IN THE OUTFILE= 
			OPTION, BUT USING A DIFFERENT NAME IN THE SHEET= STATEMENT. IF A SHEET BY THAT NAME ALREADY EXISTS IN THE FILE, IT WILL NOT BE 
			OVERWRITTEN UNLESS YOU ALSO SPECIFY THE REPLACE OPTION.


D)	WRITTING RAW DATA FILES WITH THE DATA STEP

	--->	WHEN YOU NEED TOTAL CONTROL OVER THE CONTENTS AND FORMAT OF RAW DATA FILES THAT YOU ARE CREATING, THEN THE DATA STEP IS THE WAY TO GO. 
			USING FILE AND PUT STATEMENTS IN THE DATA STEP, YOU CAN WRITE ALMOST ANY FORM OF RAW DATA FILE. THIS METHOD HAS, TO SOME EXTENT, BEEN 
			REPLACED BY THE EASIER-TO-USE PROC EXPORT AND EXPORT WIZARD,2 BUT WHILE PROC EXPORT GIVES YOU ONLY A FEW OPTIONS IN FORMATTING YOUR 
			FILES, THE DATA STEP GIVES YOU FLEXIBILITY TO CREATE RAW DATA FILES JUST THE WAY YOU WANT. 

	--->	YOU CAN WRITE RAW DATA THE SAME WAY THAT YOU READ RAW DATA, WITH JUST A FEW CHANGES. INSTEAD OF NAMING THE EXTERNAL FILE IN AN INFILE 
			STATEMENT, YOU NAME IT IN A FILE STATEMENT. INSTEAD OF READING VARIABLES WITH AN INPUT STATEMENT, YOU WRITE THEM WITH A PUT STATEMENT. 
			TO SAY IT ANOTHER WAY, YOU USE INFILE AND INPUT STATEMENTS TO GET RAW DATA INTO SAS, AND FILE AND PUT STATEMENTS TO GET RAW DATA OUT.

	--->	PUT STATEMENTS CAN BE IN LIST, COLUMN, OR FORMATTED STYLE, JUST LIKE INPUT STATEMENTS, BUT SINCE SAS ALREADY KNOWS WHETHER A VARIABLE 
			IS NUMERIC OR CHARACTER, YOU DON’T HAVE TO PUT A $ AFTER CHARACTER VARIABLES. IF YOU USE LIST STYLE PUT STATEMENTS, SAS WILL 
			AUTOMATICALLY PUT ONE SPACE BETWEEN EACH VARIABLE, CREATING A SPACE-DELIMITED FILE. TO WRITE FILES WITH OTHER DELIMITERS, USE A 
			LIST-STYLE PUT STATEMENT AND THE DSD= AND DLM= OPTIONS IN YOUR FILE STATEMENT.:

									FILE 'FILE-SPECIFICATION' DSD DLM = 'DELIMITER':

	--->	IF YOU USE COLUMN OR FORMATTED STYLES OF PUT STATEMENTS, SAS WILL PUT THE VARIABLES WHEREVER YOU SPECIFY. YOU CAN CONTROL SPACING WITH 
			THE SAME POINTER CONTROLS THAT INPUT STATEMENTS USE: @N TO MOVE TO COLUMN N, +N TO MOVE N COLUMNS, / TO SKIP TO THE NEXT LINE, #N TO 
			SKIP TO LINE N, AND THE TRAILING @ TO HOLD THE CURRENT LINE. IN ADDITION TO PRINTING VARIABLES, YOU CAN INSERT A TEXT STRING BY SIMPLY 
			ENCLOSING IT IN QUOTATION MARKS.


E)	WRITTING DELIMITED FILE USING ODS

	--->	THE OUTPUT DELIVERY SYSTEM (ODS) IS A POWERFUL TOOL FOR CREATING ALL SORTS OF OUTPUT FORMATS. SOME OF THE OUTPUT FORMATS THAT ODS CAN 
			CREATE ARE USEFUL FOR TRANSFERRING DATA FROM SAS TO OTHER APPLICATIONS. MANY APPLICATIONS CAN READ DATA THAT ARE IN EITHER CSV OR HTML 
			FORMAT, AND THE GREAT THING IS THAT YOU CAN USE THIS METHOD IN ANY OPERATING ENVIRONMENT AND IT’S INCLUDED IN BASE SAS SOFTWARE.

	--->	SINCE ALL PROCEDURE OUTPUT GOES TO ODS, YOU CAN USE ODS TO EXPORT DATA BY CHOOSING THE APPROPRIATE OUTPUT DESTINATION FOR YOUR 
			APPLICATION, AND USING PROC PRINT TO GET A LISTING OF YOUR DATA. BY DEFAULT, SAS WILL PRINT A PERIOD FOR ANY MISSING NUMERIC DATA. 
			IF YOU WOULD RATHER HAVE SAS PRINT NOTHING FOR MISSING NUMERIC DATA, THEN YOU CAN USE THE MISSING='  ' SYSTEM OPTION. ALSO BY DEFAULT, 
			PROC PRINT INCLUDES OBSERVATION NUMBERS. IF YOU DON’T WANT OBSERVATION NUMBERS IN YOUR OUTPUT FILE, THEN USE THE NOOBS OPTION ON THE 
			PROC PRINT STATEMENT.

	--->	CSV FILES  THE CSV DESTINATION PUTS COMMAS BETWEEN DATA VALUES AND DOUBLE QUOTATION MARKS AROUND CHARACTER VALUES. THE DOUBLE QUOTATION 
			MARKS ALLOW DATA VALUES TO CONTAIN COMMAS. TO CREATE A CSV FILE CONTAINING YOUR DATA, USE THE FOLLOWING ODS STATEMENTS:

									ODS CSV FILE = 'filename.csv':
									Your PROC PRINT statements go here 
									RUN: 
									ODS CSV CLOSE: 

	--->	WHERE FILENAME.CSV IS THE NAME OF THE CSV FILE THAT YOU ARE CREATING, AND YOU INSERT THE APPROPRIATE PROC PRINT STATEMENTS FOR YOUR 
			DATA. THE CSV OUTPUT DESTINATION DOES NOT INCLUDE TITLES OR FOOTNOTES: IF YOU WANT TITLES AND FOOTNOTES TO APPEAR IN THE CSV FILE, 
			THEN USE THE CSVALL OUTPUT DESTINATION INSTEAD OF CSV.

	--->	HTML FILES  USE THE FOLLOWING STATEMENTS TO PRODUCE AN HTML FILE OF YOUR DATA (AND ANY TITLES OR FOOTNOTES) WITH THE DEFAULT STYLE. 
			YOU CAN CHOOSE A DIFFERENT STYLE BY ADDING THE STYLE= OPTION TO THE ODS HTML STATEMENT. OR, IF YOU DO NOT WANT ANY STYLING, THEN USE 
			THE CHTML (COMPACT HTML) OUTPUT DESTINATION INSTEAD OF HTML. THE FILE= OPTION ON THE ODS HTML STATEMENT IS SYNONYMOUS WITH THE 
			BODY= OPTION. 

									ODS HTML FILE = 'filename.html'; 
									Your PROC PRINT statements go here
									RUN; 
									ODS HTML CLOSE; 
